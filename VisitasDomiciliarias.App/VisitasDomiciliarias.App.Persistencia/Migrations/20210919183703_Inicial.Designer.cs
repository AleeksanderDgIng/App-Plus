// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisitasDomiciliarias.App.Persistencia;

namespace VisitasDomiciliarias.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210919183703_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("MascotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoAnimo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FechasVisitaId")
                        .HasColumnType("int");

                    b.Property<int>("FrecCardiaca")
                        .HasColumnType("int");

                    b.Property<int>("FrecRespiratoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdentificacionPersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerPersonaId")
                        .HasColumnType("int");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Recomendaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Temperatura")
                        .HasColumnType("real");

                    b.Property<bool>("Tipo")
                        .HasColumnType("bit");

                    b.HasKey("MascotaId");

                    b.HasIndex("FechasVisitaId");

                    b.HasIndex("IdentificacionPersonaId");

                    b.HasIndex("OwnerPersonaId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Identificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Visita", b =>
                {
                    b.Property<int>("VisitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VisitantePersonaId")
                        .HasColumnType("int");

                    b.HasKey("VisitaId");

                    b.HasIndex("VisitantePersonaId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("VisitasDomiciliarias.App.Dominio.Persona");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("VisitasDomiciliarias.App.Dominio.Persona");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Mascota", b =>
                {
                    b.HasOne("VisitasDomiciliarias.App.Dominio.Visita", "Fechas")
                        .WithMany()
                        .HasForeignKey("FechasVisitaId");

                    b.HasOne("VisitasDomiciliarias.App.Dominio.Veterinario", "Identificacion")
                        .WithMany()
                        .HasForeignKey("IdentificacionPersonaId");

                    b.HasOne("VisitasDomiciliarias.App.Dominio.Propietario", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerPersonaId");

                    b.Navigation("Fechas");

                    b.Navigation("Identificacion");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VisitasDomiciliarias.App.Dominio.Visita", b =>
                {
                    b.HasOne("VisitasDomiciliarias.App.Dominio.Veterinario", "Visitante")
                        .WithMany()
                        .HasForeignKey("VisitantePersonaId");

                    b.Navigation("Visitante");
                });
#pragma warning restore 612, 618
        }
    }
}
